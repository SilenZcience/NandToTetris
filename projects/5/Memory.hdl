// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load=1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // if address[14]==0, load RAM because we are in the first 16K
    DMux(in=load, sel=address[14], a=loadram, b=loadscreenorkeyboard);
    // if address[13]==0, load screen because we are in the first 8K starting at 0x4000
    DMux(in=loadscreenorkeyboard, sel=address[13], a=loadscreen, b=loadkeyboardorinvalid);

    // load ram
    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    // load screen
    Screen(in=in, load=loadscreen, address=address[0..12], out=outscreen);

    // load keyboard if valid address
  	Keyboard(out=keyboard);
    IsZero16(in[0..12]=address[0..12], in[13..15]=false, out=validaddress);
  	Mux16(a=false, b=keyboard, sel=validaddress, out=outkeyboard);

  	// determine output
  	Mux16(a=outscreen, b=outkeyboard, sel=address[13], out=outscreenkeyboard);
  	Mux16(a=outram, b=outscreenkeyboard, sel=address[14], out=out);
}
