function Tank.init 0
push constant 41
call Array.new 1
pop static 0
push constant 41
call Array.new 1
pop static 1
call Tank.initTrigTables 0
pop temp 0
push constant 0
return
function Tank.deinit 0
push static 0
call Array.dispose 1
pop temp 0
push static 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Tank.initTrigTables 0
push constant 0
push static 0
add
push constant 985
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 1
add
push constant 174
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 996
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 87
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 1000
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push constant 996
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 1
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 0
add
push constant 985
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 1
add
push constant 174
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 0
add
push constant 966
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 1
add
push constant 259
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 0
add
push constant 940
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 1
add
push constant 342
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 0
add
push constant 906
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 1
add
push constant 423
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 0
add
push constant 866
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 1
add
push constant 500
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 0
add
push constant 819
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 1
add
push constant 574
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 0
add
push constant 766
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 1
add
push constant 643
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 0
add
push constant 707
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 1
add
push constant 707
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 0
add
push constant 643
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 1
add
push constant 766
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 0
add
push constant 574
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 1
add
push constant 819
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 0
add
push constant 500
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 1
add
push constant 866
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push static 0
add
push constant 423
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push static 1
add
push constant 906
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
push static 0
add
push constant 342
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
push static 1
add
push constant 940
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 17
push static 0
add
push constant 259
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 17
push static 1
add
push constant 966
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 18
push static 0
add
push constant 174
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 18
push static 1
add
push constant 985
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 19
push static 0
add
push constant 87
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 19
push static 1
add
push constant 996
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 20
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 20
push static 1
add
push constant 1000
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 21
push static 0
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 21
push static 1
add
push constant 996
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 22
push static 0
add
push constant 174
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 22
push static 1
add
push constant 985
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 23
push static 0
add
push constant 259
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 23
push static 1
add
push constant 966
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 24
push static 0
add
push constant 342
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 24
push static 1
add
push constant 940
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 25
push static 0
add
push constant 423
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 25
push static 1
add
push constant 906
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 26
push static 0
add
push constant 500
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 26
push static 1
add
push constant 866
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 27
push static 0
add
push constant 574
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 27
push static 1
add
push constant 819
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 28
push static 0
add
push constant 643
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 28
push static 1
add
push constant 766
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 29
push static 0
add
push constant 707
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 29
push static 1
add
push constant 707
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 30
push static 0
add
push constant 766
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 30
push static 1
add
push constant 643
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 31
push static 0
add
push constant 819
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 31
push static 1
add
push constant 574
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 32
push static 0
add
push constant 866
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 32
push static 1
add
push constant 500
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 33
push static 0
add
push constant 906
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 33
push static 1
add
push constant 423
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 34
push static 0
add
push constant 940
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 34
push static 1
add
push constant 342
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 35
push static 0
add
push constant 966
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 35
push static 1
add
push constant 259
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 36
push static 0
add
push constant 985
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 36
push static 1
add
push constant 174
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 37
push static 0
add
push constant 996
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 37
push static 1
add
push constant 87
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 38
push static 0
add
push constant 1000
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 38
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 39
push static 0
add
push constant 996
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 39
push static 1
add
push constant 87
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 40
push static 0
add
push constant 985
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 40
push static 1
add
push constant 174
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Tank.getSinTable 0
push static 0
return
function Tank.getCosTable 0
push static 1
return
function Tank.drawExplosion 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 128
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 16704
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 12610
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 11820
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 4660
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 4232
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 6280
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 24902
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 31183
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 24902
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 6280
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 2180
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 5668
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 6490
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8518
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 129
call Memory.poke 2
pop temp 0
push constant 0
return
function Tank.eraseExplosion 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Tank.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 7
push constant 0
pop this 2
push constant 15
pop this 3
push constant 100
pop this 4
push constant 100
pop this 5
push constant 0
pop this 6
push pointer 0
return
function Tank.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Tank.getX 0
push argument 0
pop pointer 0
push this 0
return
function Tank.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Tank.getY 0
push argument 0
pop pointer 0
push this 1
return
function Tank.getHealth 0
push argument 0
pop pointer 0
push this 4
return
function Tank.getFuel 0
push argument 0
pop pointer 0
push this 5
return
function Tank.refuel 0
push argument 0
pop pointer 0
push constant 100
pop this 5
push constant 0
return
function Tank.applyDamage 1
push argument 0
pop pointer 0
push this 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
push this 4
push argument 1
sub
call Math.max 2
pop this 4
push this 4
push constant 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 2
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 1
push constant 12
sub
push constant 32
call Math.multiply 2
push this 0
push constant 8
sub
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Tank.drawExplosion 1
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
push local 0
call Tank.eraseExplosion 1
pop temp 0
push constant 0
not
pop this 6
label IF_FALSE1
push constant 0
return
function Tank.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 6
gt
push this 0
push constant 7
sub
push argument 1
add
pop pointer 1
push that 0
push this 0
push argument 1
add
pop pointer 1
push that 0
sub
call Math.abs 1
push constant 15
lt
and
push this 5
push constant 0
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push constant 1
sub
pop this 5
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push this 0
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
pop this 1
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.moveRight 0
push argument 0
pop pointer 0
push this 0
push constant 504
lt
push this 0
push constant 7
add
push argument 1
add
pop pointer 1
push that 0
push this 0
push argument 1
add
pop pointer 1
push that 0
sub
call Math.abs 1
push constant 15
lt
and
push this 5
push constant 0
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push constant 1
sub
pop this 5
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push this 0
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
pop this 1
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.rotateLeft 0
push argument 0
pop pointer 0
push this 2
push constant 100
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 2
push constant 5
sub
pop this 2
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.rotateRight 0
push argument 0
pop pointer 0
push this 2
push constant 100
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 2
push constant 5
add
pop this 2
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.decreasePower 0
push argument 0
pop pointer 0
push this 3
push constant 9
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push constant 1
sub
pop this 3
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.increasePower 0
push argument 0
pop pointer 0
push this 3
push constant 25
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push constant 1
add
pop this 3
push pointer 0
push argument 1
call Tank.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Tank.fire 14
push argument 0
pop pointer 0
push this 2
push constant 100
add
push constant 5
call Math.divide 2
pop local 2
push local 2
push static 0
add
pop pointer 1
push that 0
pop local 3
push local 2
push static 1
add
pop pointer 1
push that 0
pop local 4
push constant 0
push constant 511
push this 0
push this 3
push local 3
call Math.multiply 2
push constant 1000
call Math.divide 2
add
call Math.min 2
call Math.max 2
pop local 5
push constant 0
push constant 255
push this 1
push this 3
push local 4
call Math.multiply 2
push constant 1000
call Math.divide 2
sub
call Math.min 2
call Math.max 2
pop local 6
push local 6
push local 5
push argument 2
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
pop local 5
push this 1
pop local 6
label IF_FALSE0
push local 5
push local 6
push this 3
push this 2
push argument 1
push static 0
push static 1
call Projectile.new 7
pop local 12
label WHILE_EXP0
push local 12
call Projectile.isActive 1
not
if-goto WHILE_END0
push local 12
call Projectile.update 1
pop temp 0
push local 12
call Projectile.getX 1
pop local 0
push local 12
call Projectile.getY 1
pop local 1
push constant 0
pop local 7
label WHILE_EXP1
push local 7
push argument 4
lt
not
if-goto WHILE_END1
push local 7
push argument 3
add
pop pointer 1
push that 0
pop local 13
push local 13
push pointer 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 13
call Tank.getX 1
pop local 8
push local 13
call Tank.getY 1
pop local 9
push local 8
push local 0
sub
call Math.abs 1
push constant 6
sub
pop local 10
push local 9
push local 1
sub
call Math.abs 1
push constant 4
sub
pop local 11
push local 10
push local 12
call Projectile.getWeaponType 1
push constant 1
add
lt
push local 11
push local 12
call Projectile.getWeaponType 1
push constant 1
add
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 2
push local 0
push local 1
push local 12
call Projectile.getRadius 1
call Tank.destroyGround 5
pop temp 0
push local 12
call Projectile.deactivate 1
pop temp 0
push local 12
return
label IF_FALSE2
label IF_FALSE1
push local 7
push constant 1
add
pop local 7
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 0
push constant 511
push local 0
call Math.min 2
call Math.max 2
push argument 2
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
neg
gt
push local 0
push constant 512
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 2
push local 0
push local 1
push local 12
call Projectile.getRadius 1
call Tank.destroyGround 5
pop temp 0
label IF_FALSE4
push local 12
call Projectile.deactivate 1
pop temp 0
goto IF_END3
label IF_FALSE3
push constant 10
call Sys.wait 1
pop temp 0
label IF_END3
goto WHILE_EXP0
label WHILE_END0
push local 12
return
function Tank.destroyGround 5
push argument 0
pop pointer 0
push argument 2
push argument 4
gt
push argument 2
push constant 511
push argument 4
sub
lt
and
push argument 3
push argument 4
gt
and
push argument 3
push constant 255
push argument 4
sub
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 3
lt
not
if-goto WHILE_END0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 2
push argument 3
push argument 4
call Screen.drawCircle 3
pop temp 0
push constant 60
call Sys.wait 1
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 2
push argument 3
push argument 4
call Screen.drawCircle 3
pop temp 0
push constant 60
call Sys.wait 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push argument 2
push argument 4
sub
push constant 0
call Math.max 2
pop local 2
push argument 2
push argument 4
add
push constant 511
call Math.min 2
pop local 3
push local 2
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP1
push local 0
push local 3
lt
not
if-goto WHILE_END1
push local 0
push argument 2
sub
pop local 1
push argument 3
push argument 4
add
push local 1
call Math.abs 1
sub
pop local 4
push local 0
push argument 1
add
pop pointer 1
push that 0
push argument 3
push argument 4
sub
push local 1
call Math.abs 1
add
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push argument 1
add
pop pointer 1
push that 0
push constant 2
push argument 4
call Math.multiply 2
push constant 2
push local 1
call Math.abs 1
call Math.multiply 2
sub
add
pop local 4
goto IF_END1
label IF_FALSE1
push local 0
push argument 1
add
pop pointer 1
push that 0
push local 4
call Math.max 2
pop local 4
label IF_END1
push local 4
push constant 255
call Math.min 2
pop local 4
push local 0
push local 0
push argument 1
add
pop pointer 1
push that 0
push local 0
push local 4
call Screen.drawLine 4
pop temp 0
push local 0
push argument 1
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Tank.draw 6
push argument 0
pop pointer 0
push this 6
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 6
sub
push this 1
push constant 4
sub
push this 0
push constant 6
add
push this 1
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 100
add
push constant 5
call Math.divide 2
pop local 3
push local 3
push static 0
add
pop pointer 1
push that 0
pop local 4
push local 3
push static 1
add
pop pointer 1
push that 0
pop local 5
push constant 0
push constant 511
push this 0
push this 3
push local 4
call Math.multiply 2
push constant 1000
call Math.divide 2
add
call Math.min 2
call Math.max 2
pop local 1
push constant 0
push constant 255
push this 1
push this 3
push local 5
call Math.multiply 2
push constant 1000
call Math.divide 2
sub
call Math.min 2
call Math.max 2
pop local 2
push local 2
push local 1
push argument 1
add
pop pointer 1
push that 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
push local 1
push local 2
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 4
sub
push this 1
push this 0
push constant 4
add
push this 1
call Screen.drawLine 4
pop temp 0
push this 7
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 1
push constant 2
sub
push this 0
push this 1
push constant 2
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE2
push this 0
push constant 4
sub
push this 1
push constant 4
add
push this 0
push constant 4
sub
push this 1
push constant 4
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 2
sub
push this 1
push constant 4
add
push this 0
push constant 2
sub
push this 1
push constant 4
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 4
add
push this 1
push constant 4
add
push this 0
push constant 4
add
push this 1
push constant 4
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 2
add
push this 1
push constant 4
add
push this 0
push constant 2
add
push this 1
push constant 4
add
call Screen.drawLine 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Tank.free 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
