function Projectile.new 1
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 0
not
pop this 5
push argument 3
push constant 90
add
push constant 5
call Math.divide 2
pop local 0
push argument 2
push local 0
push argument 4
add
pop pointer 1
push that 0
call Math.multiply 2
push constant 2000
call Math.divide 2
pop this 2
push argument 2
push local 0
push argument 5
add
pop pointer 1
push that 0
call Math.multiply 2
push constant 2000
call Math.divide 2
neg
pop this 3
push pointer 0
return
function Projectile.update 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Projectile.draw 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 4
push constant 1
add
pop this 4
push this 4
push constant 3
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 4
push this 3
push constant 1
add
pop this 3
label IF_FALSE0
push this 0
push this 2
add
pop this 0
push this 1
push this 3
add
pop this 1
push pointer 0
call Projectile.draw 1
pop temp 0
push constant 0
return
function Projectile.draw 0
push argument 0
pop pointer 0
push this 1
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push constant 2
lt
push this 0
push constant 509
gt
or
push this 1
push constant 253
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Projectile.deactivate 1
pop temp 0
push constant 0
return
label IF_FALSE1
push this 0
push this 1
push constant 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Projectile.isActive 0
push argument 0
pop pointer 0
push this 5
return
function Projectile.deactivate 0
push argument 0
pop pointer 0
push constant 0
pop this 5
push constant 0
return
function Projectile.getX 0
push argument 0
pop pointer 0
push this 0
return
function Projectile.getY 0
push argument 0
pop pointer 0
push this 1
return
function Projectile.free 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
