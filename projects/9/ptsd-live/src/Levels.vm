function Levels.initLevel 1
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 512
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 400
push constant 400
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 512
lt
not
if-goto WHILE_END1
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 200
gt
push local 0
push constant 300
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push argument 1
add
push constant 75
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 400
push constant 400
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 250
push constant 250
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push argument 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push constant 512
lt
not
if-goto WHILE_END2
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 250
gt
push local 0
push constant 262
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push argument 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
push argument 2
add
push constant 160
push constant 160
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 50
push constant 50
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 320
push constant 320
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push argument 0
push constant 4
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push constant 512
lt
not
if-goto WHILE_END3
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 137
gt
push local 0
push constant 157
lt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push argument 1
add
push constant 130
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE6
push local 0
push constant 156
gt
push local 0
push constant 356
lt
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push argument 1
add
push constant 230
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE7
push local 0
push constant 355
gt
push local 0
push constant 375
lt
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push argument 1
add
push constant 130
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE8
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
push constant 0
push argument 2
add
push constant 100
push constant 100
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 400
push constant 400
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 256
push constant 256
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
push argument 0
push constant 5
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
pop local 0
label WHILE_EXP4
push local 0
push constant 512
lt
not
if-goto WHILE_END4
push local 0
push argument 1
add
push constant 80
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 100
gt
push local 0
push constant 200
lt
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push argument 1
add
push constant 120
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE10
push local 0
push constant 200
gt
push local 0
push constant 300
lt
and
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push argument 1
add
push constant 160
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE11
push local 0
push constant 300
gt
push local 0
push constant 400
lt
and
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
push argument 1
add
push constant 200
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE12
push local 0
push constant 400
gt
push local 0
push constant 500
lt
and
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
push argument 1
add
push constant 240
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE13
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push constant 0
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 450
push constant 450
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 250
push constant 250
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE9
push argument 0
push constant 6
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
pop local 0
label WHILE_EXP5
push local 0
push constant 512
lt
not
if-goto WHILE_END5
push local 0
push argument 1
add
push constant 80
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 100
gt
push local 0
push constant 200
lt
and
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push local 0
push argument 1
add
push constant 120
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE15
push local 0
push constant 200
gt
push local 0
push constant 300
lt
and
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push argument 1
add
push constant 160
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE16
push local 0
push constant 300
gt
push local 0
push constant 400
lt
and
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push local 0
push argument 1
add
push constant 200
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE17
push local 0
push constant 400
gt
push local 0
push constant 500
lt
and
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push local 0
push argument 1
add
push constant 240
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE18
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP5
label WHILE_END5
push constant 0
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 200
push constant 200
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 300
push constant 300
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 400
push constant 400
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE14
push argument 0
push constant 7
eq
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 0
pop local 0
label WHILE_EXP6
push local 0
push constant 512
lt
not
if-goto WHILE_END6
push local 0
push argument 1
add
push local 0
push constant 3
call Math.divide 2
push constant 75
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP6
label WHILE_END6
push constant 0
push argument 2
add
push constant 200
push constant 200
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 300
push constant 300
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 400
push constant 400
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE19
push argument 0
push constant 8
eq
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push constant 0
pop local 0
label WHILE_EXP7
push local 0
push constant 512
lt
not
if-goto WHILE_END7
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 236
gt
push local 0
push constant 276
lt
and
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push local 0
push argument 1
add
push constant 50
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE21
push local 0
push constant 350
gt
push local 0
push constant 410
lt
and
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push local 0
push argument 1
add
push constant 30
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE22
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP7
label WHILE_END7
push constant 0
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 180
push constant 180
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 300
push constant 300
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 450
push constant 450
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 2
add
push constant 500
push constant 500
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE20
push argument 0
push constant 9
eq
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 0
pop local 0
label WHILE_EXP8
push local 0
push constant 512
lt
not
if-goto WHILE_END8
push local 0
push argument 1
add
push constant 100
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 82
gt
push local 0
push constant 430
lt
and
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push local 0
push argument 1
add
push local 0
push constant 256
sub
push local 0
push constant 256
sub
call Math.multiply 2
push constant 300
call Math.divide 2
neg
push constant 200
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE24
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP8
label WHILE_END8
push constant 0
push argument 2
add
push constant 256
push constant 256
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 156
push constant 156
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 356
push constant 356
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 2
add
push constant 481
push constant 481
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE23
push argument 0
push constant 10
eq
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push constant 0
pop local 0
label WHILE_EXP9
push local 0
push constant 512
lt
not
if-goto WHILE_END9
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 82
gt
push local 0
push constant 430
lt
and
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push local 0
push argument 1
add
push local 0
push constant 256
sub
push local 0
push constant 256
sub
call Math.multiply 2
push constant 300
call Math.divide 2
push constant 50
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE26
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP9
label WHILE_END9
push constant 0
push argument 2
add
push constant 256
push constant 256
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 30
push constant 30
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 156
push constant 156
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 356
push constant 356
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 2
add
push constant 481
push constant 481
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE25
push argument 0
push constant 11
eq
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push constant 0
pop local 0
label WHILE_EXP10
push local 0
push constant 256
lt
not
if-goto WHILE_END10
push local 0
push argument 1
add
push constant 150
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 82
gt
push local 0
push constant 430
lt
and
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
push local 0
push argument 1
add
push local 0
push constant 256
sub
push local 0
push constant 256
sub
call Math.multiply 2
push constant 300
call Math.divide 2
push constant 50
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE28
push local 0
push argument 1
add
push local 0
push argument 1
add
pop pointer 1
push that 0
push local 0
push constant 3
call Math.divide 2
add
push constant 255
call Math.min 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP10
label WHILE_END10
push constant 0
pop local 0
label WHILE_EXP11
push local 0
push constant 256
lt
not
if-goto WHILE_END11
push constant 256
push local 0
add
push argument 1
add
push constant 256
push local 0
sub
push argument 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP11
label WHILE_END11
push constant 256
push argument 1
add
push constant 130
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 2
add
push constant 256
push constant 256
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
not
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 256
push constant 256
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push constant 100
push constant 100
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push constant 100
push constant 100
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 2
add
push constant 100
push constant 100
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push argument 2
add
push constant 100
push constant 100
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push argument 2
add
push constant 411
push constant 411
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push argument 2
add
push constant 411
push constant 411
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push argument 2
add
push constant 411
push constant 411
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push argument 2
add
push constant 411
push constant 411
push argument 1
add
pop pointer 1
push that 0
push constant 5
sub
push constant 0
call Tank.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE27
push constant 0
return
function Levels.tankAmount 0
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
return
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
return
label IF_FALSE1
push argument 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
return
label IF_FALSE2
push argument 0
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
return
label IF_FALSE3
push argument 0
push constant 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
return
label IF_FALSE4
push argument 0
push constant 6
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 4
return
label IF_FALSE5
push argument 0
push constant 7
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 4
return
label IF_FALSE6
push argument 0
push constant 8
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 5
return
label IF_FALSE7
push argument 0
push constant 9
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 5
return
label IF_FALSE8
push argument 0
push constant 10
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 5
return
label IF_FALSE9
push argument 0
push constant 11
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 10
return
label IF_FALSE10
push constant 0
return
